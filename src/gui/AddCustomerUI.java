package gui;

import classes.CustomerInformation;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class AddCustomerUI extends javax.swing.JFrame {

    private int counterNumber = 0;

    public AddCustomerUI(int counterNumber) {
        this.counterNumber = counterNumber;
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
        pack();
        setLocationRelativeTo(null);
        addtitlecustlabel.setText("Add new customer to queue counter " + counterNumber);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure to close this window? You will not be able to manage this customer items?", "Alert item manage!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    if (itemuiwithaddbutton != null) {
                        itemuiwithaddbutton.dispose();
                    }
                    dispose();
                }
            }
        });
    }

    private ImageIcon logo = new ImageIcon("src/images/mainicon.png");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        addtitlecustlabel = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addcustidfield = new javax.swing.JTextField();
        addcustnamefield = new javax.swing.JTextField();
        addcusticfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        adddatepurchasedfield = new javax.swing.JTextField();
        additempricefield = new javax.swing.JTextField();
        additemnamefield = new javax.swing.JTextField();
        additemidfield = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Add new customer");
        setIconImage(logo.getImage());

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        addtitlecustlabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        addtitlecustlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-cust.png"))); // NOI18N
        addtitlecustlabel.setText("Add new customer to queue counter -");

        label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label.setText("At least 1 item needed to proceed");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addtitlecustlabel)
                    .addComponent(label))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addtitlecustlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Customer name:");

        jLabel2.setText("Customer ID:");

        jLabel3.setText("Customer IC:");

        addcustidfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcustidfieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Item ID:");

        jLabel5.setText("Item name:");

        jLabel6.setText("Price:");

        jLabel7.setText("Date of purchased:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gear.png"))); // NOI18N
        jButton1.setText("Manage item list");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addcustidfield)
                            .addComponent(addcustnamefield)
                            .addComponent(addcusticfield)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adddatepurchasedfield)
                            .addComponent(additempricefield)
                            .addComponent(additemnamefield)
                            .addComponent(additemidfield)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addcustidfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(addcustnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(addcusticfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(additemidfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(additemnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(additempricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(adddatepurchasedfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addcustidfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcustidfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addcustidfieldActionPerformed

    private ItemUI itemuiwithaddbutton;
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (!jButton1.isEnabled()) {
            return;
        }

        //GET ALL VALUE HERE AND EXCEPTION HANDLING
        //ADD CUSTOMER PROCESS HERE
        String custName = addcustnamefield.getText();
        String custID = addcustidfield.getText();
        String custIC = addcusticfield.getText();

        String itemName = additemnamefield.getText();
        String itemID = additemidfield.getText();
        String datepurchased = adddatepurchasedfield.getText();

        jButton1.setEnabled(false);

        if (custID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer ID is empty", "Error Customer Data", JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(true);
            return;
        }

        if (custName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer name is empty", "Error Customer Data", JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(true);
            return;
        }

        if (custIC.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer IC is empty", "Error Customer Data", JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(true);
            return;
        }

        if (itemID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Item ID is empty.", "Error Item ID", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (itemName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Item Name is empty.", "Error Item Name", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (datepurchased.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Item date purchased is empty.", "Error Item date purchased", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //CHECK IF CUST ID EXISTS
        List<CustomerInformation> convertedItemList1 = null;
        List<CustomerInformation> filteredItemListCust1 = null;
        List<CustomerInformation> convertedItemList2 = null;
        List<CustomerInformation> filteredItemListCust2 = null;
        List<CustomerInformation> convertedItemList3 = null;
        List<CustomerInformation> filteredItemListCust3 = null;

        convertedItemList1 = (List<CustomerInformation>) hypermarket.HyperMarket.getCounter1().stream().collect(Collectors.toList());
        filteredItemListCust1 = convertedItemList1.stream().filter(items -> items.getCustID().equalsIgnoreCase(custID)).collect(Collectors.toList());

        convertedItemList2 = (List<CustomerInformation>) hypermarket.HyperMarket.getCounter2().stream().collect(Collectors.toList());
        filteredItemListCust2 = convertedItemList2.stream().filter(items -> items.getCustID().equalsIgnoreCase(custID)).collect(Collectors.toList());

        convertedItemList3 = (List<CustomerInformation>) hypermarket.HyperMarket.getCounter3().stream().collect(Collectors.toList());
        filteredItemListCust3 = convertedItemList3.stream().filter(items -> items.getCustID().equalsIgnoreCase(custID)).collect(Collectors.toList());

        for (Iterator<CustomerInformation> iterator = filteredItemListCust1.iterator(); iterator.hasNext();) {
            CustomerInformation customerData = iterator.next();
            if (customerData.getCustID().equalsIgnoreCase(custID)) {
                JOptionPane.showMessageDialog(null, "Customer ID you entered exists. ID must be different.", "Error Customer ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }

            //USE LATER ON ADD ITEM
            if (customerData.getCustID().equalsIgnoreCase(custID) && customerData.getItemID().equalsIgnoreCase(itemID)) {
                JOptionPane.showMessageDialog(null, "Item ID you entered exists. ID must be different.", "Error Item ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }
        }

        for (Iterator<CustomerInformation> iterator = filteredItemListCust2.iterator(); iterator.hasNext();) {
            CustomerInformation customerData = iterator.next();
            if (customerData.getCustID().equalsIgnoreCase(custID)) {
                JOptionPane.showMessageDialog(null, "Customer ID you entered exists. ID must be different.", "Error Customer ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }

            //USE LATER ON ADD ITEM
            if (customerData.getCustID().equalsIgnoreCase(custID) && customerData.getItemID().equalsIgnoreCase(itemID)) {
                JOptionPane.showMessageDialog(null, "Item ID you entered exists. ID must be different.", "Error Item ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }
        }

        for (Iterator<CustomerInformation> iterator = filteredItemListCust3.iterator(); iterator.hasNext();) {
            CustomerInformation customerData = iterator.next();
            if (customerData.getCustID().equalsIgnoreCase(custID)) {
                JOptionPane.showMessageDialog(null, "Customer ID you entered exists. ID must be different.", "Error Customer ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }

            //USE LATER ON ADD ITEM
            if (customerData.getCustID().equalsIgnoreCase(custID) && customerData.getItemID().equalsIgnoreCase(itemID)) {
                JOptionPane.showMessageDialog(null, "Item ID you entered exists. ID must be different.", "Error Item ID", JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
                return;
            }
        }

        double itemPrice = 0;
        try {
            itemPrice = Double.parseDouble(additempricefield.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid item price", "Error item price", JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(true);
            return;
        }

        if (counterNumber == 1) {
            hypermarket.HyperMarket.getCounter1().add(new CustomerInformation(custID, custIC, custName, "counter1", itemID, itemName, itemPrice, datepurchased));
            if (itemuiwithaddbutton == null) {
                itemuiwithaddbutton = new ItemUI(custID, counterNumber, "editable");
                itemuiwithaddbutton.setVisible(true);
            } else {
                itemuiwithaddbutton.setVisible(true);
            }
        } else if (counterNumber == 2) {
            hypermarket.HyperMarket.getCounter2().add(new CustomerInformation(custID, custIC, custName, "counter2", itemID, itemName, itemPrice, datepurchased));
            if (itemuiwithaddbutton == null) {
                itemuiwithaddbutton = new ItemUI(custID, counterNumber, "editable");
                itemuiwithaddbutton.setVisible(true);
            } else {
                itemuiwithaddbutton.setVisible(true);
            }
        } else if (counterNumber == 3) {
            hypermarket.HyperMarket.getCounter3().add(new CustomerInformation(custID, custIC, custName, "counter3", itemID, itemName, itemPrice, datepurchased));
            if (itemuiwithaddbutton == null) {
                itemuiwithaddbutton = new ItemUI(custID, counterNumber, "editable");
                itemuiwithaddbutton.setVisible(true);
            } else {
                itemuiwithaddbutton.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addcusticfield;
    private javax.swing.JTextField addcustidfield;
    private javax.swing.JTextField addcustnamefield;
    private javax.swing.JTextField adddatepurchasedfield;
    private javax.swing.JTextField additemidfield;
    private javax.swing.JTextField additemnamefield;
    private javax.swing.JTextField additempricefield;
    private javax.swing.JLabel addtitlecustlabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables

}
